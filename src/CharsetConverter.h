#ifndef CHARSETCONVERTER_H
#define CHARSETCONVERTER_H

#include <Arduino.h>

char utf8win1250(const uint8_t ch);

const char utf8_win1250_table[] = {
  0x7A,              // length of table

  // format: 0xaa, 0xbb, 0xcc
  // 0xaabb (unicode)
  // 0xcc (win1250)
  // sorted by unicode to search with bsearch
  0x00, 0xA0, 0xA0,  // 0xA0 = NO-BREAK SPACE
  0x00, 0xA4, 0xA4,  // 0xA4 = CURRENCY SIGN
  0x00, 0xA6, 0xA6,  // 0xA6 = BROKEN BAR
  0x00, 0xA7, 0xA7,  // 0xA7 = SECTION SIGN
  0x00, 0xA8, 0xA8,  // 0xA8 = DIAERESIS
  0x00, 0xA9, 0xA9,  // 0xA9 = COPYRIGHT SIGN
  0x00, 0xAB, 0xAB,  // 0xAB = LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
  0x00, 0xAC, 0xAC,  // 0xAC = NOT SIGN
  0x00, 0xAD, 0xAD,  // 0xAD = SOFT HYPHEN
  0x00, 0xAE, 0xAE,  // 0xAE = REGISTERED SIGN
  0x00, 0xB0, 0xB0,  // 0xB0 = DEGREE SIGN
  0x00, 0xB1, 0xB1,  // 0xB1 = PLUS-MINUS SIGN
  0x00, 0xB4, 0xB4,  // 0xB4 = ACUTE ACCENT
  0x00, 0xB5, 0xB5,  // 0xB5 = MICRO SIGN
  0x00, 0xB6, 0xB6,  // 0xB6 = PILCROW SIGN
  0x00, 0xB7, 0xB7,  // 0xB7 = MIDDLE DOT
  0x00, 0xB8, 0xB8,  // 0xB8 = CEDILLA
  0x00, 0xBB, 0xBB,  // 0xBB = RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
  0x00, 0xC1, 0xC1,  // 0xC1 = LATIN CAPITAL LETTER A WITH ACUTE
  0x00, 0xC2, 0xC2,  // 0xC2 = LATIN CAPITAL LETTER A WITH CIRCUMFLEX
  0x00, 0xC4, 0xC4,  // 0xC4 = LATIN CAPITAL LETTER A WITH DIAERESIS
  0x00, 0xC7, 0xC7,  // 0xC7 = LATIN CAPITAL LETTER C WITH CEDILLA
  0x00, 0xC9, 0xC9,  // 0xC9 = LATIN CAPITAL LETTER E WITH ACUTE
  0x00, 0xCB, 0xCB,  // 0xCB = LATIN CAPITAL LETTER E WITH DIAERESIS
  0x00, 0xCD, 0xCD,  // 0xCD = LATIN CAPITAL LETTER I WITH ACUTE
  0x00, 0xCE, 0xCE,  // 0xCE = LATIN CAPITAL LETTER I WITH CIRCUMFLEX
  0x00, 0xD3, 0xD3,  // 0xD3 = LATIN CAPITAL LETTER O WITH ACUTE
  0x00, 0xD4, 0xD4,  // 0xD4 = LATIN CAPITAL LETTER O WITH CIRCUMFLEX
  0x00, 0xD6, 0xD6,  // 0xD6 = LATIN CAPITAL LETTER O WITH DIAERESIS
  0x00, 0xD7, 0xD7,  // 0xD7 = MULTIPLICATION SIGN
  0x00, 0xDA, 0xDA,  // 0xDA = LATIN CAPITAL LETTER U WITH ACUTE
  0x00, 0xDC, 0xDC,  // 0xDC = LATIN CAPITAL LETTER U WITH DIAERESIS
  0x00, 0xDD, 0xDD,  // 0xDD = LATIN CAPITAL LETTER Y WITH ACUTE
  0x00, 0xDF, 0xDF,  // 0xDF = LATIN SMALL LETTER SHARP S
  0x00, 0xE1, 0xE1,  // 0xE1 = LATIN SMALL LETTER A WITH ACUTE
  0x00, 0xE2, 0xE2,  // 0xE2 = LATIN SMALL LETTER A WITH CIRCUMFLEX
  0x00, 0xE4, 0xE4,  // 0xE4 = LATIN SMALL LETTER A WITH DIAERESIS
  0x00, 0xE7, 0xE7,  // 0xE7 = LATIN SMALL LETTER C WITH CEDILLA
  0x00, 0xE9, 0xE9,  // 0xE9 = LATIN SMALL LETTER E WITH ACUTE
  0x00, 0xEB, 0xEB,  // 0xEB = LATIN SMALL LETTER E WITH DIAERESIS
  0x00, 0xED, 0xED,  // 0xED = LATIN SMALL LETTER I WITH ACUTE
  0x00, 0xEE, 0xEE,  // 0xEE = LATIN SMALL LETTER I WITH CIRCUMFLEX
  0x00, 0xF3, 0xF3,  // 0xF3 = LATIN SMALL LETTER O WITH ACUTE
  0x00, 0xF4, 0xF4,  // 0xF4 = LATIN SMALL LETTER O WITH CIRCUMFLEX
  0x00, 0xF6, 0xF6,  // 0xF6 = LATIN SMALL LETTER O WITH DIAERESIS
  0x00, 0xF7, 0xF7,  // 0xF7 = DIVISION SIGN
  0x00, 0xFA, 0xFA,  // 0xFA = LATIN SMALL LETTER U WITH ACUTE
  0x00, 0xFC, 0xFC,  // 0xFC = LATIN SMALL LETTER U WITH DIAERESIS
  0x00, 0xFD, 0xFD,  // 0xFD = LATIN SMALL LETTER Y WITH ACUTE
  0x01, 0x02, 0xC3,  // 0xC3 = LATIN CAPITAL LETTER A WITH BREVE
  0x01, 0x03, 0xE3,  // 0xE3 = LATIN SMALL LETTER A WITH BREVE
  0x01, 0x04, 0xA5,  // 0xA5 = LATIN CAPITAL LETTER A WITH OGONEK
  0x01, 0x05, 0xB9,  // 0xB9 = LATIN SMALL LETTER A WITH OGONEK
  0x01, 0x06, 0xC6,  // 0xC6 = LATIN CAPITAL LETTER C WITH ACUTE
  0x01, 0x07, 0xE6,  // 0xE6 = LATIN SMALL LETTER C WITH ACUTE
  0x01, 0x0C, 0xC8,  // 0xC8 = LATIN CAPITAL LETTER C WITH CARON
  0x01, 0x0D, 0xE8,  // 0xE8 = LATIN SMALL LETTER C WITH CARON
  0x01, 0x0E, 0xCF,  // 0xCF = LATIN CAPITAL LETTER D WITH CARON
  0x01, 0x0F, 0xEF,  // 0xEF = LATIN SMALL LETTER D WITH CARON
  0x01, 0x10, 0xD0,  // 0xD0 = LATIN CAPITAL LETTER D WITH STROKE
  0x01, 0x11, 0xF0,  // 0xF0 = LATIN SMALL LETTER D WITH STROKE
  0x01, 0x18, 0xCA,  // 0xCA = LATIN CAPITAL LETTER E WITH OGONEK
  0x01, 0x19, 0xEA,  // 0xEA = LATIN SMALL LETTER E WITH OGONEK
  0x01, 0x1A, 0xCC,  // 0xCC = LATIN CAPITAL LETTER E WITH CARON
  0x01, 0x1B, 0xEC,  // 0xEC = LATIN SMALL LETTER E WITH CARON
  0x01, 0x39, 0xC5,  // 0xC5 = LATIN CAPITAL LETTER L WITH ACUTE
  0x01, 0x3A, 0xE5,  // 0xE5 = LATIN SMALL LETTER L WITH ACUTE
  0x01, 0x3D, 0xBC,  // 0xBC = LATIN CAPITAL LETTER L WITH CARON
  0x01, 0x3E, 0xBE,  // 0xBE = LATIN SMALL LETTER L WITH CARON
  0x01, 0x41, 0xA3,  // 0xA3 = LATIN CAPITAL LETTER L WITH STROKE
  0x01, 0x42, 0xB3,  // 0xB3 = LATIN SMALL LETTER L WITH STROKE
  0x01, 0x43, 0xD1,  // 0xD1 = LATIN CAPITAL LETTER N WITH ACUTE
  0x01, 0x44, 0xF1,  // 0xF1 = LATIN SMALL LETTER N WITH ACUTE
  0x01, 0x47, 0xD2,  // 0xD2 = LATIN CAPITAL LETTER N WITH CARON
  0x01, 0x48, 0xF2,  // 0xF2 = LATIN SMALL LETTER N WITH CARON
  0x01, 0x50, 0xD5,  // 0xD5 = LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
  0x01, 0x51, 0xF5,  // 0xF5 = LATIN SMALL LETTER O WITH DOUBLE ACUTE
  0x01, 0x54, 0xC0,  // 0xC0 = LATIN CAPITAL LETTER R WITH ACUTE
  0x01, 0x55, 0xE0,  // 0xE0 = LATIN SMALL LETTER R WITH ACUTE
  0x01, 0x58, 0xD8,  // 0xD8 = LATIN CAPITAL LETTER R WITH CARON
  0x01, 0x59, 0xF8,  // 0xF8 = LATIN SMALL LETTER R WITH CARON
  0x01, 0x5A, 0x8C,  // 0x8C = LATIN CAPITAL LETTER S WITH ACUTE
  0x01, 0x5B, 0x9C,  // 0x9C = LATIN SMALL LETTER S WITH ACUTE
  0x01, 0x5E, 0xAA,  // 0xAA = LATIN CAPITAL LETTER S WITH CEDILLA
  0x01, 0x5F, 0xBA,  // 0xBA = LATIN SMALL LETTER S WITH CEDILLA
  0x01, 0x60, 0x8A,  // 0x8A = LATIN CAPITAL LETTER S WITH CARON
  0x01, 0x61, 0x9A,  // 0x9A = LATIN SMALL LETTER S WITH CARON
  0x01, 0x62, 0xDE,  // 0xDE = LATIN CAPITAL LETTER T WITH CEDILLA
  0x01, 0x63, 0xFE,  // 0xFE = LATIN SMALL LETTER T WITH CEDILLA
  0x01, 0x64, 0x8D,  // 0x8D = LATIN CAPITAL LETTER T WITH CARON
  0x01, 0x65, 0x9D,  // 0x9D = LATIN SMALL LETTER T WITH CARON
  0x01, 0x6E, 0xD9,  // 0xD9 = LATIN CAPITAL LETTER U WITH RING ABOVE
  0x01, 0x6F, 0xF9,  // 0xF9 = LATIN SMALL LETTER U WITH RING ABOVE
  0x01, 0x70, 0xDB,  // 0xDB = LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
  0x01, 0x71, 0xFB,  // 0xFB = LATIN SMALL LETTER U WITH DOUBLE ACUTE
  0x01, 0x79, 0x8F,  // 0x8F = LATIN CAPITAL LETTER Z WITH ACUTE
  0x01, 0x7A, 0x9F,  // 0x9F = LATIN SMALL LETTER Z WITH ACUTE
  0x01, 0x7B, 0xAF,  // 0xAF = LATIN CAPITAL LETTER Z WITH DOT ABOVE
  0x01, 0x7C, 0xBF,  // 0xBF = LATIN SMALL LETTER Z WITH DOT ABOVE
  0x01, 0x7D, 0x8E,  // 0x8E = LATIN CAPITAL LETTER Z WITH CARON
  0x01, 0x7E, 0x9E,  // 0x9E = LATIN SMALL LETTER Z WITH CARON
  0x02, 0xC7, 0xA1,  // 0xA1 = CARON
  0x02, 0xD8, 0xA2,  // 0xA2 = BREVE
  0x02, 0xD9, 0xFF,  // 0xFF = DOT ABOVE
  0x02, 0xDB, 0xB2,  // 0xB2 = OGONEK
  0x02, 0xDD, 0xBD,  // 0xBD = DOUBLE ACUTE ACCENT
  0x20, 0x13, 0x96,  // 0x96 = EN DASH
  0x20, 0x14, 0x97,  // 0x97 = EM DASH
  0x20, 0x18, 0x91,  // 0x91 = LEFT SINGLE QUOTATION MARK
  0x20, 0x19, 0x92,  // 0x92 = RIGHT SINGLE QUOTATION MARK
  0x20, 0x1A, 0x82,  // 0x82 = SINGLE LOW-9 QUOTATION MARK
  0x20, 0x1C, 0x93,  // 0x93 = LEFT DOUBLE QUOTATION MARK
  0x20, 0x1D, 0x94,  // 0x94 = RIGHT DOUBLE QUOTATION MARK
  0x20, 0x1E, 0x84,  // 0x84 = DOUBLE LOW-9 QUOTATION MARK
  0x20, 0x20, 0x86,  // 0x86 = DAGGER
  0x20, 0x21, 0x87,  // 0x87 = DOUBLE DAGGER
  0x20, 0x22, 0x95,  // 0x95 = BULLET
  0x20, 0x26, 0x85,  // 0x85 = HORIZONTAL ELLIPSIS
  0x20, 0x30, 0x89,  // 0x89 = PER MILLE SIGN
  0x20, 0x39, 0x8B,  // 0x8B = SINGLE LEFT-POINTING ANGLE QUOTATION MARK
  0x20, 0x3A, 0x9B,  // 0x9B = SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
  0x20, 0xAC, 0x80,  // 0x80 = EURO SIGN
  0x21, 0x22, 0x99   // 0x99 = TRADE MARK SIGN
};

#endif
